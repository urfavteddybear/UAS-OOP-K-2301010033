/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uasoop;

import static uasoop.dbkoneksi.koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wahyu
 */
public class frmBarang extends javax.swing.JFrame {
    String edIdBarang;
    DefaultTableModel TM = new DefaultTableModel();

    /**
     * Creates new form frmBarang
     */
    public frmBarang() throws SQLException {
        initComponents();
        
        tblBarang.setModel(TM);
        TM.addColumn("ID");
        TM.addColumn("Nama Barang");
        TM.addColumn("Stok");
        TM.addColumn("Harga Sewa");
        
        this.loadBarangData();
        fieldisEnabled(false);
        tombolisEnabled(false);
        btnSimpan.setEnabled(true);
    }
    
    private void fieldisEnabled(boolean opsi) {
        txtNamaBarang.setEditable(opsi);
        txtStok.setEditable(opsi);
        txtHargaSewa.setEditable(opsi);
    }
    
    private void tombolisEnabled(boolean opsi) {
        btnSimpan.setEnabled(opsi);
        btnUpdate.setEnabled(opsi);
        btnHapus.setEnabled(opsi);
    }
    
    private void resetForm() {
        txtNamaBarang.setText("");
        txtStok.setText("");
        txtHargaSewa.setText("");
    }
    
    // CRUD Operations
    private void storeData() throws SQLException {
        String namaBarang = txtNamaBarang.getText();
        int stok = Integer.parseInt(txtStok.getText());
        double hargaSewa = Double.parseDouble(txtHargaSewa.getText());
        
        Connection cnn = koneksi();
        PreparedStatement PS = cnn.prepareStatement("INSERT INTO barang(nama_barang, stok, harga_sewa) VALUES(?,?,?)");
        PS.setString(1, namaBarang);
        PS.setInt(2, stok);
        PS.setDouble(3, hargaSewa);
        PS.executeUpdate();
    }
    
    private void updateData() throws SQLException {
        String namaBarang = txtNamaBarang.getText();
        int stok = Integer.parseInt(txtStok.getText());
        double hargaSewa = Double.parseDouble(txtHargaSewa.getText());
        
        Connection cnn = koneksi();
        PreparedStatement PS = cnn.prepareStatement("UPDATE barang SET nama_barang=?, stok=?, harga_sewa=? WHERE id_barang=?");
        PS.setString(1, namaBarang);
        PS.setInt(2, stok);
        PS.setDouble(3, hargaSewa);
        PS.setString(4, this.edIdBarang);
        PS.executeUpdate();
    }
    
    private void destroyData() throws SQLException {
        Connection cnn = koneksi();
        PreparedStatement PS = cnn.prepareStatement("DELETE FROM barang WHERE id_barang=?");
        PS.setString(1, this.edIdBarang);
        PS.executeUpdate();
    }
    
    private void loadBarangData() throws SQLException {
        Connection cnn = koneksi();
        PreparedStatement PS = cnn.prepareStatement("SELECT * FROM barang ORDER BY nama_barang");
        ResultSet RS = PS.executeQuery();
        
        TM.getDataVector().removeAllElements();
        TM.fireTableDataChanged();
        
        while (RS.next()) {
            Object[] dta = new Object[4];
            dta[0] = RS.getInt("id_barang");
            dta[1] = RS.getString("nama_barang");
            dta[2] = RS.getInt("stok");
            dta[3] = "Rp " + String.format("%,.0f", RS.getDouble("harga_sewa"));
            TM.addRow(dta);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();
        lblNamaBarang = new javax.swing.JLabel();
        txtNamaBarang = new javax.swing.JTextField();
        lblStok = new javax.swing.JLabel();
        txtStok = new javax.swing.JTextField();
        lblHargaSewa = new javax.swing.JLabel();
        txtHargaSewa = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manajemen Data Barang");
        setResizable(false);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setText("MANAJEMEN DATA BARANG");

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Barang", "Stok", "Harga Sewa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBarang);

        lblNamaBarang.setText("Nama Barang:");

        lblStok.setText("Stok:");

        lblHargaSewa.setText("Harga Sewa (per hari):");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblNamaBarang)
                            .addComponent(txtNamaBarang)
                            .addComponent(lblStok)
                            .addComponent(txtStok)
                            .addComponent(lblHargaSewa)
                            .addComponent(txtHargaSewa)
                            .addComponent(btnSimpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTitle)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNamaBarang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblStok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblHargaSewa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHargaSewa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBarangMouseClicked
        this.edIdBarang = tblBarang.getValueAt(tblBarang.getSelectedRow(), 0).toString();
        txtNamaBarang.setText(tblBarang.getValueAt(tblBarang.getSelectedRow(), 1).toString());
        txtStok.setText(tblBarang.getValueAt(tblBarang.getSelectedRow(), 2).toString());
        String harga = tblBarang.getValueAt(tblBarang.getSelectedRow(), 3).toString();
        txtHargaSewa.setText(harga.replace("Rp ", "").replace(",", ""));
        btnUpdate.setEnabled(true);
        btnHapus.setEnabled(true);
    }//GEN-LAST:event_tblBarangMouseClicked

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if (btnSimpan.getText().equals("Simpan")) {
            tombolisEnabled(false);
            btnSimpan.setText("Save");
            btnSimpan.setEnabled(true);
            resetForm();
            fieldisEnabled(true);
        } else {
            if (txtNamaBarang.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nama barang harus diisi!");
                return;
            }
            
            try {
                Integer.parseInt(txtStok.getText());
                Double.parseDouble(txtHargaSewa.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Stok dan harga harus berupa angka!");
                return;
            }
            
            btnSimpan.setText("Simpan");
            try {
                storeData();
                loadBarangData();
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
            resetForm();
            fieldisEnabled(false);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (btnUpdate.getText().equals("Update")) {
            btnUpdate.setText("Save");
            tombolisEnabled(false);
            btnUpdate.setEnabled(true);
            fieldisEnabled(true);
        } else {
            if (txtNamaBarang.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nama barang harus diisi!");
                return;
            }
            
            try {
                Integer.parseInt(txtStok.getText());
                Double.parseDouble(txtHargaSewa.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Stok dan harga harus berupa angka!");
                return;
            }
            
            try {
                updateData();
                loadBarangData();
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
            btnUpdate.setText("Update");
            tombolisEnabled(false);
            btnSimpan.setEnabled(true);
            fieldisEnabled(false);
            resetForm();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        String namaBarang = txtNamaBarang.getText();
        int option = JOptionPane.showOptionDialog(this,
                "Apakah yakin ingin menghapus data " + namaBarang + "?",
                "Konfirmasi Hapus Data",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, null, null);
        
        if (option == JOptionPane.YES_OPTION) {
            try {
                destroyData();
                loadBarangData();
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
                resetForm();
                btnUpdate.setEnabled(false);
                btnHapus.setEnabled(false);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetForm();
        fieldisEnabled(false);
        btnSimpan.setText("Simpan");
        btnUpdate.setText("Update");
        tombolisEnabled(false);
        btnSimpan.setEnabled(true);
        tblBarang.clearSelection();
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmBarang().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frmBarang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHargaSewa;
    private javax.swing.JLabel lblNamaBarang;
    private javax.swing.JLabel lblStok;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblBarang;
    private javax.swing.JTextField txtHargaSewa;
    private javax.swing.JTextField txtNamaBarang;
    private javax.swing.JTextField txtStok;
    // End of variables declaration//GEN-END:variables
}
